---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "geth-swap.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "geth-swap.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "geth-swap.fullname" . }}-headless
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  replicas: {{ .Values.replicaCount }}
  updateStrategy:
    {{- toYaml .Values.updateStrategy | nindent 4 }}
  selector:
    matchLabels:
      {{- include "geth-swap.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "geth-swap.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "geth-swap.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if or .Values.gethSetup .Values.extraInitContainers }}
      initContainers:
        {{- if .Values.gethSetup }}
        - name: geth-setup
          image: "{{ include "geth-swap.image" . }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
          - sh
          - -ac
          - >
            set -xe;
            if [ ! -f /root/.ethereum/geth-setup ]; then
              geth account import --password /dev/null /etc/config/validatorKey || true;
              geth init /etc/config/genesis.json || true;
              touch /root/.ethereum/geth-setup
            fi
          volumeMounts:
            - name: geth-config
              mountPath: /etc/config
            - name: data
              mountPath: /root/.ethereum
        {{- end }}
        {{- if .Values.extraInitContainers }}
          {{- toYaml .Values.extraInitContainers | nindent 8 }}
        {{- end }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ include "geth-swap.image" . }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            {{- range .Values.gethCommand }}
            - {{ . }}
            {{- end }}
          ports:
            - name: rpc
              containerPort: 8545
              protocol: TCP
            - name: ws
              containerPort: 8546
              protocol: TCP
          {{- if .Values.probesEnable }}
          livenessProbe:
            httpGet:
              path: /
              port: rpc
            initialDelaySeconds: 5
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          volumeMounts:
            - name: geth-config
              mountPath: /etc/config
            - name: data
              mountPath: /root/.ethereum
        {{- if .Values.etherProxy.enabled }}
        - name: ether-proxy
          image: "{{ include "etherProxy.image" . }}"
          imagePullPolicy: {{ .Values.etherProxy.image.pullPolicy }}
          env:
            - name: TARGET
              value: {{ .Values.etherProxy.target | quote }}
            - name: PORT
              value: {{ .Values.etherProxy.service.port | quote }}
            - name: EXPIRY
              value: {{ .Values.etherProxy.expiry | quote }}
          {{- with .Values.etherProxy.envs }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - containerPort: {{ .Values.etherProxy.service.port }}
              name: ether-proxy
              protocol: TCP
          resources:
            {{- toYaml .Values.etherProxy.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /health
              port: ether-proxy
          readinessProbe:
            httpGet:
              path: /readiness
              port: ether-proxy
        {{- end }}
      volumes:
        - name: geth-config
          configMap:
            name: {{ include "geth-swap.fullname" . }}-config
  {{- if not .Values.persistence.enabled }}
        - name: data
          emptyDir: {}
  {{- else }}
  volumeClaimTemplates:
  - metadata:
      name: data
      labels:
        {{- include "geth-swap.labelsVCT" . | nindent 8 }}
    spec:
      accessModes:
        - {{ .Values.persistence.accessMode | quote }}
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
    {{- if .Values.persistence.storageClass }}
      {{- if (eq "-" .Values.persistence.storageClass) }}
      storageClassName: ""
      {{- else }}
      storageClassName: {{ .Values.persistence.storageClass | quote }}
      {{- end }}
    {{- end }}
  {{- end }}
