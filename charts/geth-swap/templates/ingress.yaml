{{- if .Values.ingress.enabled -}}
{{- $fullName := include "geth-swap.fullname" . -}}
{{- $svcPort := .Values.service.port -}}
{{- if eq .Values.ingress.class "traefik" -}}
{{- $namespace := .Release.Namespace -}}
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: {{ $fullName }}
  namespace: {{ $namespace }}
spec:
  routes:
  {{- range .Values.ingress.hosts }}
  {{-  $ingressHost := $fullName -}}
  {{- if .domain }}
  {{- $ingressHost = printf "%s.%s" $fullName .domain -}}
  {{- end }}
  {{- range .paths }}
  - kind: Rule
    match: Host({{ $ingressHost | quote }}) &&  PathPrefix({{ . | quote }})
    services:
    - kind: Service
      name: {{ $fullName }}
      namespace: {{ $namespace }}
      port: {{ $svcPort }}
  {{- end }}
  {{- end }}
{{- else -}}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.Version -}}
apiVersion: networking.k8s.io/v1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "geth-swap.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  ingressClassName: {{ .Values.ingress.class }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ . }}
            pathType: ImplementationSpecific
            backend:
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
          {{- end }}
    {{- end }}
  {{- end }}
{{- end }}
